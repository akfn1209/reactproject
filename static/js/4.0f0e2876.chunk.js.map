{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","connect","state","reducer","alert열렸니","reducer2","id","useParams","찾은상품","shoes","find","상품","history","useHistory","useState","alert","alert변경","inputData","inputData변경","누른탭변경","스위치","setTimeout","className","onChange","e","target","value","src","width","title","content","price","onClick","재고변경","dispatch","type","데이터","name","quan","push","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"sNASIA,EAAKC,IAAOC,IAAV,8CAGFC,EAAKF,IAAOG,GAAV,8DAEK,SAAAC,GAAK,OAAIA,EAAMC,gBAwF1B,SAASC,EAAWF,GAMjB,OAJDG,qBAAU,WACRH,EAAMI,gCAAM,MAGE,GAAXJ,EAAMK,mBAEJ,+EAEgB,GAAXL,EAAMK,mBACV,+EAEc,GAAXL,EAAMK,mBACP,oFADH,EAOT,SAASC,EAAKN,GACZ,OACE,gDAASA,EAAMO,aAAG,MAYNC,uBAPhB,SAAaC,GACX,MAAO,CACLA,MAAQA,EAAMC,QACdC,0BAAWF,EAAMG,YAILJ,EAtHhB,SAAgBR,GAId,IAAKa,EAAMC,cAAND,GAEDE,EAAOf,EAAMgB,MAAMC,MAAK,SAASC,GACnC,OAAOA,EAAGL,IAAMA,KAGdM,EAAUC,cACd,EAAsBC,oBAAS,GAA/B,mBAAKC,EAAL,KAAWC,EAAX,KACA,EAA8BF,mBAAS,IAAvC,mBAAKG,EAAL,KAAeC,EAAf,KAEA,EAAkBJ,mBAAS,GAA3B,mBAAKhB,EAAL,KAAUqB,EAAV,KACA,EAAmBL,oBAAS,GAA5B,mBAAKM,EAAL,KAAUvB,EAAV,KAWA,OARAD,qBAAU,WACEyB,YAAW,WACnBL,GAAQ,KACR,OACF,CAACD,IAKL,sBAAKO,UAAU,YAAf,UACE,cAAClC,EAAD,UACE,cAACG,EAAD,CAAI+B,UAAU,MAAd,8CAGDL,EACD,uBAAOM,SAAU,SAACC,GAAKN,EAAYM,EAAEC,OAAOC,UAGjC,GAATX,EAEE,qBAAKO,UAAU,WAAf,SACF,8GAGE,KAEA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACA,qBAAKK,IAAK,6CAA8CnB,EAAKF,GAAK,GAAI,OAAQsB,MAAM,WAEpF,sBAAKN,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBd,EAAKqB,QAC3B,4BAAIrB,EAAKsB,UACT,8BAAItB,EAAKuB,MAAT,YAGA,cAAChC,EAAD,CAAMC,eAAIP,EAAMO,eAEhB,wBAAQsB,UAAU,iBAAiBU,QAAS,WAC1CvC,EAAMwC,yBAAK,CAAC,EAAE,GAAG,KACjBxC,EAAMyC,SAAS,CAACC,KAAK,2BAAQC,qBAAM,CAAC9B,GAAGE,EAAKF,GAAK+B,KAAK7B,EAAKqB,MAAOS,KAAO,KACzE1B,EAAQ2B,KAAK,UAHf,sCAKA,wBAAQjB,UAAU,iBAAiBU,QAAS,WAAKpB,EAAQ4B,UAAzD,4CAKR,eAAC,IAAD,CAAKlB,UAAU,OAAOmB,QAAQ,OAAOC,iBAAiB,SAAtD,UACA,cAAC,IAAIC,KAAL,UACA,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASb,QAAS,WAAKnC,GAAM,GAAQsB,EAAM,IAA9D,sBAEA,cAAC,IAAIwB,KAAL,UACA,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASb,QAAS,WAAKnC,GAAM,GAAQsB,EAAM,IAA9D,2BAKF,cAAC,IAAD,CAAe2B,GAAI1B,EAAK2B,WAAW,MAAMC,QAAS,IAAlD,SACA,cAACrD,EAAD,CAAYG,qBAAKA,EAAKD,iCAAOA","file":"static/js/4.0f0e2876.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport { Navbar,Nav,NavDropdown,Button,Jumbotron } from 'react-bootstrap';\r\nimport {CSSTransition} from \"react-transition-group\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet 박스 = styled.div`\r\n padding : 20px;\r\n`;\r\nlet 제목 = styled.h4`\r\n font-size : 25px;\r\n color : ${props => props.색상}\r\n`\r\n\r\n\r\nfunction Detail(props){\r\n\r\n\r\n  \r\n  let {id} = useParams();\r\n\r\n  let 찾은상품 = props.shoes.find(function(상품){\r\n    return 상품.id == id\r\n  });\r\n\r\n  let history = useHistory();\r\n  let [alert,alert변경] = useState(true);\r\n  let [inputData,inputData변경] = useState('');\r\n\r\n  let [누른탭, 누른탭변경] =useState(0);\r\n  let [스위치, 스위치변경] = useState(false);\r\n\r\n\r\n  useEffect(()=>{\r\n    let 타이머 = setTimeout(()=>{\r\n      alert변경(false)\r\n    },2000);\r\n  },[alert]);\r\n\r\n\r\n\r\n  return(\r\n<div className=\"container\">\r\n  <박스>\r\n    <제목 className=\"red\">상세페이지</제목>\r\n  </박스>\r\n\r\n  {inputData}\r\n  <input onChange={(e)=>{inputData변경(e.target.value)}}></input>\r\n  \r\n  {\r\n    alert == true\r\n    ? (\r\n      <div className=\"my-alert\">\r\n    <p>재고가 얼마 남지 않았습니다</p>\r\n  </div>\r\n    )\r\n    : null\r\n  }\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n        <img src={'https://codingapple1.github.io/shop/shoes'+ (찾은상품.id + 1) +'.jpg'} width=\"100%\" />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n          <p>{찾은상품.content}</p>\r\n          <p>{찾은상품.price}원</p>\r\n\r\n\r\n          <Info 재고={props.재고}></Info>\r\n\r\n          <button className=\"btn btn-danger\" onClick={()=>{\r\n            props.재고변경([9,11,12]);\r\n            props.dispatch({type:'항목추가', 데이터 : {id:찾은상품.id , name:찾은상품.title, quan : 1} });\r\n            history.push('/cart');\r\n          }}>주문하기</button> \r\n          <button className=\"btn btn-danger\" onClick={()=>{history.goBack();}}>뒤로가기</button> \r\n        </div>\r\n      </div>\r\n\r\n\r\n  <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n  <Nav.Item>\r\n  <Nav.Link eventKey=\"link-0\" onClick={()=>{스위치변경(false); 누른탭변경(0)}}>Active</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n  <Nav.Link eventKey=\"link-1\" onClick={()=>{스위치변경(false); 누른탭변경(1)}}>Option 2</Nav.Link>\r\n  </Nav.Item>\r\n</Nav>\r\n\r\n\r\n<CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n<TabContent 누른탭={누른탭} 스위치변경={스위치변경}></TabContent>  \r\n</CSSTransition>\r\n\r\n</div> \r\n)\r\n}\r\n\r\nfunction TabContent(props){\r\n\r\n  useEffect(()=>{\r\n    props.스위치변경(true);\r\n  })\r\n  \r\n   if (props.누른탭==0)  {\r\n\r\n  return <div>0번째 내용입니다</div>\r\n\r\n   } else if (props.누른탭==1) {\r\n   return <div>1번째 내용입니다</div>\r\n\r\n   }else if (props.누른탭==2){\r\n     return <div>2번째 내용입니다</div>\r\n   }\r\n   \r\n  \r\n}\r\n\r\nfunction Info(props){\r\n  return(\r\n    <p>재고 : {props.재고[0]}</p>\r\n  )\r\n}\r\n\r\n\r\nfunction 함수명(state){\r\n  return {\r\n    state : state.reducer,\r\n    alert열렸니 : state.reducer2\r\n  }\r\n }\r\n \r\n export default connect(함수명)(Detail);\r\n\r\n"],"sourceRoot":""}